{"remainingRequest":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/thread-loader/dist/cjs.js!/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/babel-loader/lib/index.js!/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/src/common/api.service.js","dependencies":[{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/src/common/api.service.js","mtime":1601931856000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCB7IENTUkZfVE9LRU4gfSBmcm9tICIuL2NzcmZfdG9rZW4uanMiOwoKZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2UocmVzcG9uc2UpIHsKICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDQpIHsKICAgIHRocm93IG5ldyBFcnJvcigiTm8gZGF0YSIpOwogIH0gZWxzZSBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHsKICAgIHRocm93IG5ldyBFcnJvcigiV3JvbmcgVVJMIik7CiAgfSBlbHNlIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkgewogICAgdGhyb3cgbmV3IEVycm9yKCJSZXN0YXVyYW50IGFsbHJlYWR5IGFkZGVkISIpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogIH0KfQoKZnVuY3Rpb24gYXBpU2VydmljZShlbmRwb2ludCwgbWV0aG9kLCBkYXRhKSB7CiAgdmFyIGNvbmZpZyA9IHsKICAgIG1ldGhvZDogbWV0aG9kIHx8ICJHRVQiLAogICAgYm9keTogZGF0YSAhPT0gdW5kZWZpbmVkID8gSlNPTi5zdHJpbmdpZnkoZGF0YSkgOiBudWxsLAogICAgaGVhZGVyczogewogICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAnWC1DU1JGVE9LRU4nOiBDU1JGX1RPS0VOCiAgICB9CiAgfTsKICByZXR1cm4gZmV0Y2goZW5kcG9pbnQsIGNvbmZpZykudGhlbihoYW5kbGVSZXNwb25zZSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICByZXR1cm4gY29uc29sZS5sb2coZXJyb3IpOwogIH0pOwp9CgpleHBvcnQgeyBhcGlTZXJ2aWNlIH07"},{"version":3,"sources":["/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/src/common/api.service.js"],"names":["CSRF_TOKEN","handleResponse","response","status","Error","json","apiService","endpoint","method","data","config","body","undefined","JSON","stringify","headers","fetch","then","catch","error","console","log"],"mappings":";AAAA,SAASA,UAAT,QAA2B,iBAA3B;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,CAAU,SAAV,CAAN;AACD,GAFD,MAEO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,UAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACD,GAFM,MAEA,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,UAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD,GAFM,MAEA;AACL,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACD;AACF;;AAGD,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AAC1C,MAAMC,MAAM,GAAG;AACbF,IAAAA,MAAM,EAAEA,MAAM,IAAI,KADL;AAEbG,IAAAA,IAAI,EAAEF,IAAI,KAAKG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB,GAA4C,IAFrC;AAGbM,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,qBAAef;AAFR;AAHI,GAAf;AAQA,SAAOgB,KAAK,CAACT,QAAD,EAAWG,MAAX,CAAL,CACEO,IADF,CACOhB,cADP,EAEEiB,KAFF,CAEQ,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFb,CAAP;AAGD;;AAED,SAASb,UAAT","sourcesContent":["import { CSRF_TOKEN } from \"./csrf_token.js\"\n\nfunction handleResponse(response) {\n  if (response.status === 204) {\n    throw new Error(\"No data\")\n  } else if (response.status === 404) {\n    throw new Error(\"Wrong URL\")\n  } else if (response.status === 400) {\n    throw new Error(\"Restaurant allready added!\")    \n  } else {\n    return response.json();    \n  }\n}\n\n\nfunction apiService(endpoint, method, data) {\n  const config = {\n    method: method || \"GET\",    \n    body: data !== undefined ? JSON.stringify(data) : null,\n    headers: {\n      'content-type': 'application/json',      \n      'X-CSRFTOKEN': CSRF_TOKEN,      \n    },\n  }\n  return fetch(endpoint, config)\n          .then(handleResponse)\n          .catch(error => console.log(error))\n}\n\nexport { apiService };"]}]}