{"remainingRequest":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/src/views/Rest_Reviews.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/src/views/Rest_Reviews.vue","mtime":1602351230000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubmF2aU1lbnUgPiB1bCBsaSB7CiAgbGlzdC1zdHlsZS10eXBlOiBub25lOwp9Ci5yZXZpZXdEZXRhaWwgewogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGJvcmRlcjogMXB4IHNvbGlkIGIgYnJhbmNoCn0KYm9keSB7CiAgYmFja2dyb3VuZC1pbWFnZTp1cmwoLi4vYXNzZXRzL09wdGltaXplZC1iYW5hbmFfcGFsbXMuanBnKTsKfQoK"},{"version":3,"sources":["Rest_Reviews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rest_Reviews.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"card bg-info text-white mb-3 w-75 mt-3 mx-auto\">\n      <div class=\"card-header row ml-0 mr-0 justify-content-between\">\n        <div>\n          <h2>{{ this.$route.params.name }}</h2>\n        </div>\n        <div class=\"row\">\n          <div>\n            <div class=\"btn btn-sm btn-danger mt-2 mr-2\"\n                @click=\"showPics= !showPics\n                        showCatPic()\">+ \n                <i class=\"fa fa-camera\"></i></div>\n          </div>\n          <div>\n            <div v-show=\"this.$route.params.website != undefined\">\n              <a class=\"btn btn-sm btn-warning mt-2 mr-2\"\n                :href=\"this.$route.params.website\"\n                role=\"button\"\n                target=\"_blank\">Site Internet</a>\n            </div>\n          </div>\n          <div>\n            <button\n              @click=\"isHidden= !isHidden\"\n              class=\"btn btn-sm btn-success mt-2 mr-2\"\n            >Horaires et Accés</button>\n          </div>\n          <div>\n            <button\n              v-show=\"showEditor== false\"\n              class=\"btn btn-sm btn-primary mt-2 mr-2\"\n              @click=\"addRestaurant(), showTheEditor()\"\n            >Ajouter une Review</button>\n\n            <button\n              v-show=\"showEditor== true\"\n              class=\"btn btn-sm btn-danger mt-2 mr-2\"\n              @click=\"deleteReview\"\n            >Annuler la Review</button>\n          </div>\n        </div>\n      </div>\n\n      <div v-show=\"isHidden\">\n        <div class=\"card-body row justify-content-around\">\n          <div class=\"mt-auto\">\n            <ul style=\"list-style-type:none\">\n              <h3>Horaires:</h3>\n              <li v-for=\"item in this.$route.params.opening_hours \" \n                  :key=\"item\">{{ item }}\n              </li>\n            </ul>\n          </div>\n          <div>\n            <img :src=\"mapUrl\" />\n          </div>\n        </div>\n      </div>\n\n      <div v-show=\"showPics\" class=\"bg-muted\">\n        <div class=\"d-flex flex-row justify-content-around mb-3 \">\n            <div class=\"mt-3\" v-for=\"(buttonPic, index) in buttonPics\" :key=\"buttonPic\">\n              <button @click=\"picIndex=index, showCatPic()\"\n                      class=\"btn btn-sm btn-outline-danger text-white\"\n              >{{ buttonPic }}\n              </button>\n            </div>\n        </div>\n      </div>\n\n      <div class=\"card-footer\">\n        <div class=\"row  justify-content-around\">\n          <div> <i>{{ this.$route.params.adress }}</i> </div>\n          <div v-show=\"this.$route.params.phone != undefined\">\n            <i class=\"fas fa-phone\"></i> <i>{{ this.$route.params.phone }}</i>\n          </div>         \n        </div>   \n      </div>\n\n    </div>\n\n    <div v-show=\"showPics && picByCat\" class=\"container\">\n      <PicByCat :picByCat=\"picByCat\"/>\n    </div>\n\n\n    <div v-if=\"showEditor\" class=\"container\">\n      <ReviewEditor :id=\"review_id\" />\n    </div>\n\n    <div class=\"container mt-3 \">\n      <div class=\"row mt-3 reviewDetail border border-primary\" \n            v-for=\"(review, index) in reviews\" \n            :key=\"review.pk\">\n        <div class=\"col-8 pt-3\">\n          <h3>\n            Visité par:\n            <b>{{ review.review_author }}</b>, le\n            <i>{{ review.created_at }}</i>\n          </h3>\n          \n        </div>\n        <div class=\"col-4 text-center my-auto\">\n          <button\n            v-show=\"reviewToShow !== index\"\n            type=\"button\"\n            class=\"btn btn -sm btn-outline-info\"\n            @click=\"reviewToShow= index\"\n          >Consulter</button>\n          <button\n            v-show=\"reviewToShow == index\"\n            type=\"button\"\n            class=\"btn btn -sm btn-outline-danger\"\n            @click=\"reviewToShow= null\"\n          >Refermer</button>\n        </div>      \n       \n\n        <div v-show=\"reviewToShow == index\">\n          <ReviewDetail :id=\"review.id\" />\n        </div>\n      </div>\n    </div>\n    \n  </div>\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport ReviewDetail from \"@/components/ReviewDetail.vue\";\nimport ReviewEditor from \"@/components/ReviewEditor.vue\";\nimport PicByCat from \"@/components/PicByCat.vue\";\nimport { store } from \"../common/store.js\";\nimport axios from \"axios\"\n\nimport vueconfig from \"../vueconfig.js\";\n\n\nexport default {\n  name: \"rest_reviews\",\n\n  props: {\n    maps: { type: String, required: true }\n  },\n\n  data() {\n    return {\n      isHidden: false,\n      showPics: false,      \n      reviewToShow: null,\n      showEditor: false,\n      reviews: [],\n      review_id: 0,\n      lat: this.$route.params.lat,\n      lng: this.$route.params.lng,\n      error: null,\n      storeState: store.state,\n      buttonPics: ['Entrée', 'Plat-principal',\n                  'Dessert', 'Menu', 'Extérieur',\n                  'Intérieur'],\n      picIndex: null,\n      picByCat: []\n    }\n  },\n\n  components: {\n    ReviewDetail,\n    ReviewEditor,\n    PicByCat\n  },\n\n  computed: {\n    mapUrl() {\n      const url = \"https://maps.googleapis.com/maps/api/staticmap\";\n      const params = new URLSearchParams({\n        center: `${this.$route.params.restLat},${this.$route.params.restLng}`,\n        zoom: 15,\n        size: \"250x250\",\n        maptype: \"terrain\",\n        key: \"AIzaSyCGmIAISNa4W8KK24eXmH-ly_5k_vpAsos\"\n      });\n      return `${url}?${params}`\n    }\n  },\n\n  methods: {\n\n    getReviews() {\n      let endpoint = `/api/rest_review/${this.maps}/`;     \n      apiService(endpoint).then(data => {\n        this.reviews.push(...data)       \n      });\n    },\n\n    addRestaurant() {           \n      this.storeState.pictures = []\n      let endpoint = `/api/restaurant/`;\n      let method = \"POST\";\n      let config = {\n        maps: this.$route.params.maps,\n        adress: this.$route.params.adress,\n        name: this.$route.params.name,\n        opened: this.$route.params.opening_hours,\n        website: this.$route.params.website,\n        phone: this.$route.params.phone,\n        restLat: this.$route.params.restLat,\n        restLng: this.$route.params.restLng   \n      }        \n      apiService(endpoint, method, config)\n        .then(data => {\n          console.log(\"Restaurant added!\" + data);\n          this.addReview();\n        })\n        .catch(error => console.log(error));\n      },\n\n    addReview() {      \n      let endpoint = `/api/restaurant_review/`;\n      let method = \"POST\";\n      apiService(endpoint, method, {\n        maps: this.$route.params.maps,\n        review_author: 1\n      }).then(res => {\n        this.review_id = res.id;        \n      })\n    },\n\n    showTheEditor() {\n      this.showEditor = true\n    },\n\n    deleteReview() {\n      let endpoint = `/api/restaurant_review/${this.review_id}/`;\n      let method = \"DELETE\";\n      apiService(endpoint, method);\n      this.$router.push({ name: \"home\" });\n    },\n\n    showCatPic() {\n      this.storeState.picShow = null\n      this.picEndpoint = \"all_single_rest_pics\"\n      \n      if (this.picIndex == 0) {  \n          this.picEndpoint = \"rest_starter_pic\"}      \n      else if (this.picIndex == 1) {\n              this.picEndpoint = \"rest_main_pic\"}               \n      else if (this.picIndex == 2) {\n              this.picEndpoint = \"rest_dessert_pic\"}\n      else if (this.picIndex == 3) {\n              this.picEndpoint = \"rest_menu_pic\"} \n      else if (this.picIndex== 4) {\n              this.picEndpoint = \"rest_outside_pic\"}\n      else if (this.picIndex == 5) {\n              this.picEndpoint = \"rest_inside_pic\"}      \n              \n      axios.get(`${vueconfig.baseUrl}/api/${this.picEndpoint}/${this.$route.params.maps}/`)\n        .then (data => {\n          console.log(data.data)\n          this.picByCat = data.data          \n        })\n    }\n  },\n\n  created() {\n    this.getReviews();    \n  },\n\n  watch:{\n    maps: function() {\n      if (this.maps) {\n        this.reviews = [];        \n        this.getReviews();\n      }\n    }\n  }\n}\n\n</script>\n\n<style>\n.naviMenu > ul li {\n  list-style-type: none;\n}\n.reviewDetail {\n  background-color: white;\n  border: 1px solid b branch\n}\nbody {\n  background-image:url(../assets/Optimized-banana_palms.jpg);\n}\n\n</style>\n"]}]}