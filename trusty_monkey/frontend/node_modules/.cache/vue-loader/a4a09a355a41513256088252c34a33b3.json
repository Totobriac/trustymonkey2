{"remainingRequest":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/src/components/Navbar.vue?vue&type=style&index=0&id=1fc67150&scoped=true&lang=css&","dependencies":[{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/src/components/Navbar.vue","mtime":1602351392000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/Desktop/last_version/trustymonkey/trusty_monkey/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubXktbmF2YmFyIHsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZ3JleTsKfQoubmF2YmFyLWJyYW5kIHsKICBmb250LXdlaWdodDogYm9sZDsKICBmb250LXNpemU6IDIwMCU7Cn0KLm5hdmJhci1icmFuZDpob3ZlciB7CiAgY29sb3I6IGdyZXkgIWltcG9ydGFudDsKfQojbWFwIHsKICB3aWR0aDogNDUlOwp9Ci5mb3JtLWNvbnRyb2wgewogIGJvcmRlci1sZWZ0OiBub25lOwogIGJvcmRlci1yaWdodDogbm9uZTsKICBib3JkZXItdG9wOiBub25lOwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBsaWdodGJsdWU7Cn0KLm91dEJ0biB7CiAgY29sb3I6IHJlZDsKfQoub3V0QnRuOmhvdmVyIHsKICBjb2xvcjogd2hpdGU7Cn0KLmluQnRuIHsKICBjb2xvcjogYmx1ZTsKfQouaW5CdG46aG92ZXIgewogIGNvbG9yOiB3aGl0ZTsKfQo="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Navbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light my-navbar\">\n    <div class=\"container\">\n      <router-link :to=\"{ name: 'home' }\" class=\"navbar-brand\">TrustyMonkey</router-link>\n\n      <div class=\"collapse navbar-collapse flex-row justify-content-end\">\n\n        <vue-google-autocomplete\n          ref=\"inputField\"\n          id=\"map\"\n          class=\"form-control mr-sm-2\"\n          placeholder=\"Rechercher un restaurant\"\n          v-on:placechanged=\"getAddressData\"\n          country=\"fr\"\n          types=\"establishment\"          \n        ></vue-google-autocomplete>\n\n        <ul class=\"navbar-nav mr-2\">\n          <li class=\"nav-item active\">\n            <a v-if=\"isLoggedIn\" class=\"outBtn btn btn-outline-danger\" v-on:click=\"logout\">Se deconnecter</a>\n            <a v-else class=\"inBtn btn btn-outline-primary\" v-on:click=\"login\" >Se connecter</a>\n          </li>\n        </ul>\n\n      </div>\n    </div>\n  </nav>\n</template>\n\n\n<script>\nimport VueGoogleAutocomplete from \"vue-google-autocomplete\";\nimport { store } from \"../common/store.js\";\nimport vueconfig from \"../vueconfig.js\";\n\nconst baseUrl = vueconfig.baseUrl;\n\nexport default {\n  name: \"NavbarComponent\",\n  components: { VueGoogleAutocomplete },\n  data() {\n    return {\n      requestUser: false,\n      addressData: \"\",            \n    };\n  },\n  computed: {\n    isLoggedIn() {\n      console.log(window.localStorage.getItem(\"username\"))    \n      return window.localStorage.getItem(\"username\");      \n    }\n  },   \n  methods: {\n    login() {\n      window.localStorage.setItem(\"username\", \"toto\")     \n      window.location.replace(baseUrl + \"/accounts/login/\")\n    },\n    logout() {\n      window.localStorage.removeItem(\"username\");         \n      window.location.replace(baseUrl + \"/accounts/logout/\")\n    },   \n    getAddressData(addressData, placeResultData) {\n      this.placeResultData = placeResultData;\n      console.log(this.placeResultData)    \n      this.lat = this.placeResultData.geometry.location.lat(),\n      this.lng = this.placeResultData.geometry.location.lng(),        \n      store.setRestLat(this.lat)      \n      store.setRestLng(this.lng)\n      \n      if (this.placeResultData.types.includes('restaurant') ||\n          this.placeResultData.types.includes('bar') ) \n        { if (this.placeResultData.opening_hours == undefined) {        \n          this.opening_hours = [\"lundi: Non renseigné\", \"mardi: Non renseigné\", \n                                \"mercredi: Non renseigné\", \"jeudi: Non renseigné\",\n                                \"vendredi: Non renseigné\", \"samedi: Non renseigné\",\n                                \"dimanche: Non renseigné\"] \n        } else { this.opening_hours = this.placeResultData.opening_hours.weekday_text}\n\n        this.$router.push({ name: \"rest_reviews\", \n                  params: { maps: this.placeResultData.place_id,\n                            name: this.placeResultData.name,\n                            adress: this.placeResultData.formatted_address,                          \n                            opening_hours: this.opening_hours,\n                            phone: this.placeResultData.formatted_phone_number,\n                            website: this.placeResultData.website,\n                            type: this.placeResultData.types,\n                            restLat: this.lat,\n                            restLng: this.lng}})      \n        this.$refs.inputField.$refs.autocomplete.value='';   \n\n      } else { this.$router.push({ name: \"notarest\" });\n              this.$refs.inputField.$refs.autocomplete.value='';}\n    }\n  }\n}\n</script>\n\n<style scoped>\n.my-navbar {\n  border-bottom: 1px solid grey;\n}\n.navbar-brand {\n  font-weight: bold;\n  font-size: 200%;\n}\n.navbar-brand:hover {\n  color: grey !important;\n}\n#map {\n  width: 45%;\n}\n.form-control {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-bottom: 1px solid lightblue;\n}\n.outBtn {\n  color: red;\n}\n.outBtn:hover {\n  color: white;\n}\n.inBtn {\n  color: blue;\n}\n.inBtn:hover {\n  color: white;\n}\n</style>\n"]}]}